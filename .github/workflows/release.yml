name: Default Release Workflow

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]
  workflow_dispatch:
jobs:
  #################################################################################
  # Environment: -
  # Build & Lint
  #################################################################################

  BuildArtifacts:
    name: Build Artifacts job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ['krew-ui-angular', 'krew-ui-svelte', 'krew-ui-react']
    env:
      APP_ID: ${{ matrix.app }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Use Node 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-14-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build app ${{ env.APP_ID }}
        run: npm run build -- ${{ env.APP_ID }} --configuration=production

      - name: Display structure of dist folder
        run: ls -R
        working-directory: dist

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist/apps

 #################################################################################
  # Environment: Preview Channels
  # Preview URL
  #################################################################################

  CreatePreview:
    name: Preview URL
    needs: [BuildArtifacts]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ['krew-ui-react']
    env:
      APP_ID: ${{ matrix.app }}
      PREVIEW_ID: ${{ matrix.app }}-PR-${{github.event.number}}
    environment:
      name: Preview Channels
      url: ${{ steps.action-hosting-deploy.outputs.details_url }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist/apps

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist

      - name: Prepare deploy
        run: |
          cp -f apps/${{ env.APP_ID }}/server/firebase.json ./

      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: action-hosting-deploy
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: m4m-krew-dev
          channelId: ${{ env.PREVIEW_ID }}

  #################################################################################
  # Environment: Production
  # Releasing
  #################################################################################

  CreateRelease:
    name: Create Release
    # if: "github.event.ref == 'refs/heads/main' && ! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    needs: [BuildArtifacts]
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: artifacts

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-12-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          CI: true

      - name: Semantic release
        run: npx semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

