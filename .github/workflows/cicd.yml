name: Default Workflow

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]
  workflow_dispatch:
jobs:
  #################################################################################
  # Environment: -
  # Build & Lint
  #################################################################################

  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Use Node.js 14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-14-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          CI: true

      - name: Lint + Build affected apps # TODO: target 'lint' not yet supported by Svelte app
        uses: mansagroup/nrwl-nx-action@v2.0.3
        with:
          targets: build
          affected: 'true'

      - name: Build affected apps
        run: npm run affected:build --if-present -- --parallel --maxParallel=5

      - name: Build app (krew-ui-svelte)
        # if: "contains(github.event.pull_request.labels.*.name, 'app: krew-ui-svelte')"
        run: npm run build -- krew-ui-svelte --configuration=production

      - name: Build app (krew-ui-angular)
        # if: "contains(github.event.pull_request.labels.*.name, 'app: krew-ui-angular')"
        run: npm run build -- krew-ui-angular --configuration=production

      - name: Build app (krew-ui-react)
        if: "contains(github.event.pull_request.labels.*.name, 'app: krew-ui-react')"
        run: npm run build -- krew-ui-react --configuration=production

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist

  #################################################################################
  # Environment: Preview Channels
  # Preview URL
  #################################################################################

  CreatePreviewSvelteApp:
    name: Preview URL - Svelte app
    if: "github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'app: krew-ui-svelte')"
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Preview Channels
      url: ${{ steps.action-hosting-deploy-svelte.outputs.details_url }}
    env:
      app_id: svelte-PR${{github.event.number}}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - name: Prepare deploy
        run: |
          cp -f apps/krew-ui-svelte/server/firebase.json ./

      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: action-hosting-deploy-svelte
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: m4m-krew-dev
          channelId: ${{ env.app_id }}

  CreatePreviewAngularApp:
    name: Preview URL - Angular app
    if: "github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'app: krew-ui-angular')"
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Preview Channels
      url: ${{ steps.action-hosting-deploy-angular.outputs.details_url }}
    env:
      app_id: angular-PR${{github.event.number}}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - name: Prepare deploy
        run: |
          cp -f apps/krew-ui-angular/server/firebase.json ./

      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: action-hosting-deploy-angular
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: m4m-krew-dev
          channelId: ${{ env.app_id }}

  CreatePreviewReactApp:
    name: Preview URL - React app
    if: "github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'app: krew-ui-react')"
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Preview Channels
      url: ${{ steps.action-hosting-deploy-react.outputs.details_url }}
    env:
      app_id: react-PR${{github.event.number}}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - name: Prepare deploy
        run: |
          cp -f apps/krew-ui-react/server/firebase.json ./

      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: action-hosting-deploy-react
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: m4m-krew-dev
          channelId: ${{ env.app_id }}
  #################################################################################
  # Environment: Production
  # Releasing
  #################################################################################

  CreateRelease:
    name: Create Release
    if: "github.event.ref == 'refs/heads/main' && ! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-12-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          CI: true

      - name: Build & Save Artifacts
        run: |
          echo "Future goal: store artifacts"

      - name: Semantic release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          HUSKY_SKIP_HOOKS: 1

  #################################################################################
  # Environment: Other
  # Example jobs
  #################################################################################

  PostBuild:
    name: Post-Build job
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - name: nop
        run: echo "no operation (nop)"
